package main

func main() {
	ch := make(chan int) // Создали небуферизованный канал
	go func() { // В новой горутине запускаем цикл, отправляющий по каналу цифры от 0 до 9
		for i := 0; i < 10; i++ {
			ch <- i
		}
		// close(ch)
	}()

	for n := range ch { // main-горутина читает эти значения и выводит их в консоль
		println(n)
	}
	// Но после того, как все отправленные значения оказываются прочитанными, main-горутина не перестаёт в цикле
	// совершать операции чтения из канала, поскольку канал остался открытым, => очередная операция
	// чтения заблокирует main-горутину навсегда, т. к. отправляющая горутина уже больше ничего не отправит по каналу.
	// Нужно добавть close(ch), тогда range ch не будет пытаться читать из закрытого канала.
}